import { FC } from "react";
import { DataTable } from "@/components/common/table";
import { createSortableColumn, createActionsColumn } from "@/components/common/table";
import { Button } from "@/components/ui/button";
import { FileText, AlertCircle, Download, Bell, Filter } from "lucide-react";
import { Badge } from "@/components/ui/badge";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";

// Mock data for reports
const mockReports = [
  {
    id: "REP-001",
    title: "Monthly Compliance Report",
    type: "Compliance",
    generatedBy: "System",
    date: "2024-03-16",
    status: "ready",
    format: "PDF",
    size: "2.4 MB"
  },
  {
    id: "REP-002",
    title: "Loan Validation Summary",
    type: "Validation",
    generatedBy: "Sarah Johnson",
    date: "2024-03-15",
    status: "ready",
    format: "Excel",
    size: "1.8 MB"
  },
  // Add more mock data as needed
];

// Mock data for AI alerts
const mockAlerts = [
  {
    id: "ALERT-001",
    loanId: "LOAN-001",
    type: "Compliance Risk",
    severity: "high",
    description: "Potential TILA violation detected in loan documentation",
    detectedAt: "2024-03-16 15:30:00",
    status: "active",
    assignedTo: "Mike Brown"
  },
  {
    id: "ALERT-002",
    loanId: "LOAN-002",
    type: "Document Anomaly",
    severity: "medium",
    description: "Inconsistent income documentation detected",
    detectedAt: "2024-03-16 14:15:00",
    status: "resolved",
    assignedTo: "Sarah Johnson"
  },
  // Add more mock data as needed
];

const ReportsPage: FC = () => {
  const reportColumns = [
    createSortableColumn("id", "Report ID"),
    createSortableColumn("title", "Title"),
    createSortableColumn("type", "Type"),
    createSortableColumn("generatedBy", "Generated By"),
    createSortableColumn("date", "Date"),
    {
      accessorKey: "status",
      header: "Status",
      cell: ({ row }: any) => {
        const status = row.getValue("status");
        return (
          <Badge
            variant={
              status === "ready"
                ? "success"
                : status === "processing"
                ? "secondary"
                : "destructive"
            }
          >
            {status.charAt(0).toUpperCase() + status.slice(1)}
          </Badge>
        );
      },
    },
    createSortableColumn("format", "Format"),
    createSortableColumn("size", "Size"),
    createActionsColumn([
      {
        label: "Download",
        onClick: (data: any) => {
          console.log("Download report:", data.id);
          // Implement download logic
        },
      },
      {
        label: "Share",
        onClick: (data: any) => {
          console.log("Share report:", data.id);
          // Implement share logic
        },
      },
    ]),
  ];

  const alertColumns = [
    createSortableColumn("id", "Alert ID"),
    createSortableColumn("loanId", "Loan ID"),
    createSortableColumn("type", "Alert Type"),
    {
      accessorKey: "severity",
      header: "Severity",
      cell: ({ row }: any) => {
        const severity = row.getValue("severity");
        return (
          <Badge
            variant={
              severity === "high"
                ? "destructive"
                : severity === "medium"
                ? "secondary"
                : "default"
            }
          >
            {severity.charAt(0).toUpperCase() + severity.slice(1)}
          </Badge>
        );
      },
    },
    createSortableColumn("description", "Description"),
    createSortableColumn("detectedAt", "Detected At"),
    {
      accessorKey: "status",
      header: "Status",
      cell: ({ row }: any) => {
        const status = row.getValue("status");
        return (
          <Badge
            variant={
              status === "active"
                ? "destructive"
                : status === "pending"
                ? "secondary"
                : "success"
            }
          >
            {status.charAt(0).toUpperCase() + status.slice(1)}
          </Badge>
        );
      },
    },
    createSortableColumn("assignedTo", "Assigned To"),
    createActionsColumn([
      {
        label: "Review",
        onClick: (data: any) => {
          console.log("Review alert:", data.id);
          // Implement review logic
        },
      },
      {
        label: "Resolve",
        onClick: (data: any) => {
          console.log("Resolve alert:", data.id);
          // Implement resolve logic
        },
      },
    ]),
  ];

  // Mock statistics
  const stats = {
    totalReports: 45,
    activeAlerts: 8,
    resolvedAlerts: 32,
    averageResponseTime: "2.3 hours"
  };

  return (
    <div className="space-y-4">
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-2xl font-bold tracking-tight">Reports & Alerts</h1>
          <p className="text-muted-foreground">
            Generate compliance reports and monitor AI-driven alerts
          </p>
        </div>
        <div className="flex gap-2">
          <Button>
            <FileText className="mr-2 h-4 w-4" />
            Generate Report
          </Button>
          <Button variant="outline">
            <Filter className="mr-2 h-4 w-4" />
            Filter Alerts
          </Button>
        </div>
      </div>

      {/* Statistics */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
        <Card>
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium">Total Reports</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{stats.totalReports}</div>
          </CardContent>
        </Card>
        <Card>
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium">Active Alerts</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-red-600">{stats.activeAlerts}</div>
          </CardContent>
        </Card>
        <Card>
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium">Resolved Alerts</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-green-600">{stats.resolvedAlerts}</div>
          </CardContent>
        </Card>
        <Card>
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium">Avg. Response Time</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{stats.averageResponseTime}</div>
          </CardContent>
        </Card>
      </div>

      <Tabs defaultValue="reports" className="space-y-4">
        <TabsList>
          <TabsTrigger value="reports" className="flex items-center gap-2">
            <FileText className="h-4 w-4" />
            Reports
          </TabsTrigger>
          <TabsTrigger value="alerts" className="flex items-center gap-2">
            <Bell className="h-4 w-4" />
            AI Alerts
          </TabsTrigger>
        </TabsList>

        <TabsContent value="reports">
          <DataTable
            columns={reportColumns}
            data={mockReports}
            searchKey="title"
            title="Generated Reports"
            description="Access and manage compliance reports"
            filterableColumns={[
              {
                id: "type",
                title: "Report Type",
                options: [
                  { label: "Compliance", value: "Compliance" },
                  { label: "Validation", value: "Validation" },
                ],
              },
              {
                id: "status",
                title: "Status",
                options: [
                  { label: "Ready", value: "ready" },
                  { label: "Processing", value: "processing" },
                ],
              },
            ]}
          />
        </TabsContent>

        <TabsContent value="alerts">
          <DataTable
            columns={alertColumns}
            data={mockAlerts}
            searchKey="loanId"
            title="AI Alerts"
            description="Monitor AI-driven alerts for suspicious or non-compliant files"
            filterableColumns={[
              {
                id: "severity",
                title: "Severity",
                options: [
                  { label: "High", value: "high" },
                  { label: "Medium", value: "medium" },
                  { label: "Low", value: "low" },
                ],
              },
              {
                id: "status",
                title: "Status",
                options: [
                  { label: "", value: "all" },
                  { label: "Active", value: "active" },
                  { label: "Pending", value: "pending" },
                  { label: "Resolved", value: "resolved" },
                ],
              },
            ]}
          />
        </TabsContent>
      </Tabs>
    </div>
  );
};

export default ReportsPage; 